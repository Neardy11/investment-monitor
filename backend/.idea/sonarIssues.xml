<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="issues">
    <option name="index">
      <map>
        <entry key="/Dummy.txt">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$USER_HOME$/Downloads/Dockerfile-atlas.investimento.topicpersistent">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$USER_HOME$/Downloads/Untitled">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioClientAtlas/test/AtlasClient/sendOrder-spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioClientAtlas/test/test-credentials.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioClientBinance/src/BinanceOrderBookStream.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioClientBinance/src/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioClientBinance/test/BinanceClient/exchangeInfo-spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioClientBinance/test/BinanceOrderBookStream/index.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioClientBinance/test/test-credentials.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioClientLiquid/package.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../BitfolioFramework/src/Integrations/Huobi/HuobiOrderBookStream.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/CandleStreamMessageCoinApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/Interface/ICandleCoinApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/Interface/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/MessageCoinApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/Model/TypeCoinApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/StreamCoinApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/SubscribeTranslatorCoinApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/TradeStreamMessageCoinApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/CoinApi/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/Client/ForexApi/QuoterStreamMessageForexApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../CryptoDataCollector/src/lib/StreamSubscribeTranslator.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/package.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/actions/instance.actions.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/app-routing.module.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/app.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/app.module.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/instance/instance.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/instance/instance.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/last-update/last-update.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/last-update/last-update.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/models/Instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/reducers/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/reducers/instance.reducer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/shared/material/material.module.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/app/shared/websocket.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/environments/environment.prod.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../Examples/ngrx-learn/src/environments/environment.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../ForexWebsocketServer/config.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../ForexWebsocketServer/src/lib/Core/Client/BancoCentralApi/BancoCentralApiRequest.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../ForexWebsocketServer/src/lib/Core/ForexWebSocketServer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.env">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.gitignore">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.npmrc">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/babel.config.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build/src/app/models/interfaces/IKafkaStatusMessage.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build/src/infra/kafka/kafka-consumer-cryptodata-groupall.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/dev.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/docker-compose.yml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ecosystem.config.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/env.yml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/firebase.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/jest.config.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/logs/app.log">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/node_modules/express-swagger-generator/lib/swagger.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/package.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/sample.ecosystem.config.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/controllers/executed-strategies.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/models/ExecutedStrategies.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/models/interface/IOperation.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/models/interface/IOpportunity.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/models/interface/IRequest.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/routes/executed-strategies.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/services/service.executed-strategies.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/arbitror/services/service.executed-strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/controllers/band.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/controllers/order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/models/Band.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/models/Order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/models/OrderContent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/routes/band.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/routes/order.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/services/service.band.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-garch/services/service.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-telegram/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/bot-telegram/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/controllers/bot-events.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/controllers/instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/kafka-handlers/bot-events-indicator-handler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/kafka-handlers/bot-events-order-handler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/kafka-handlers/bot-events-status-handler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/kafka-handlers/botEventsStatusHandler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/kafka-handlers/dto.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/bot-events/BotEvents.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/bot-orders/BotEvents.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/bot-orders/BotOrder.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/dto/dto.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/group/Group.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/interfaces/IKafkaMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/interfaces/IKafkaStatusContent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/interfaces/IKafkaStrategyMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/interfaces/IkafkaMessageConsumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/models/topic/Topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/routes/bot-events.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/services/service.bot-events.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/commons/services/service.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/controllers/exchange.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/controllers/instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/controllers/order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/controllers/profile.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/controllers/route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/controllers/strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/helpers/exceptions/ExceptionResponse.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/helpers/exceptions/exception.response.catch.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/helpers/handleValitateError.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/helpers/populate.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/helpers/response/ApplicationResponse.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/helpers/response/application.response.error.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/helpers/response/application.response.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/helpers/system-errors.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/kafka-handlers/bot-events-indicator-handler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/kafka-handlers/bot-events-order-handler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/middlewares/kafka-consumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/models/dtos/bot-events-indicator-handler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/models/dtos/botEventsIndicatorHandler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/models/dtos/botEventsOrderHandler.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/models/dtos/dto.indicator.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/models/dtos/dto.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/models/interfaces/IKafkaIndicatorsContent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/models/interfaces/IKafkaOrderContent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/models/kafka-handlers/DashOrder.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/market-maker/services/service.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/middlewares/auth-route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/middlewares/config.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/middlewares/cron.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/middlewares/firebase.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/middlewares/swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/middlewares/winston.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/Application.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/Exchange.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/Instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/Order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/Page.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/Profile.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/Strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/StrategyHistory.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/dtos/dto.dash.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/dtos/dto.indicator.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/dtos/dto.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/dtos/dto.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IFractionOrder.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IKafkaIndicatorsContent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IKafkaMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IKafkaOrderContent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IKafkaOrderMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IKafkaStatus.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IKafkaStatusContent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IKafkaStatusMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IPercentUpdate.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IStrategyOrder.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IWsKafka.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/interfaces/IkafkaMessageConsumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/routes/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/routes/instance.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/routes/order.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/routes/profile.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/routes/routes.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/routes/strategy.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/services/service.exchange.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/services/service.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/services/service.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/services/service.profile.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/services/service.strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/controllers/header.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/controllers/strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/AbstractStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/GarchStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/MarketMakerStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/TelegramStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/configs/GarchConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/configs/MarketMakerConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/configs/TelegramConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/configs/types/ConfigExchangeOptions.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/configs/types/Pair.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/configs/types/Pairs.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/models/strategy/interfaces/IStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/routes/header.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/routes/strategy.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/strategy/services/service.strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/bot-telegram/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/bot-telegram/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/bot-telegram/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/bot-telegram/models/Strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/controllers/instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/db/__mocks__/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/middlewares/cron.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/middlewares/kafka-consumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/dto/dto.dash.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/dto/dto.indicator.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/dto/dto.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/enums/Topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/enums/area.en.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/enums/projectName.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/exchange/Exchange.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/instance/Instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/interfaces/IKafkaMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/interfaces/IKafkaStatusContent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/interfaces/IKafkaStrategyMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/interfaces/IkafkaMessageConsumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/models/topic/Topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/services/service.exchange.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/services/service.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/services/service.profile.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/commons/services/service.topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/controllers/instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/controllers/strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/db/__mocks__/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/helper/schemasPool.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/middlewares/validate-header.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/Config.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/IConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/Strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/Teste.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/commons/enums/Topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/instance/Instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/AbstractStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/GarchStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/MarketMakerStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/Strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/TelegramStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/configs/ConfigStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/configs/GarchConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/configs/MarketMakerConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/configs/TelegramConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/configs/types/ConfigStrategyOrder.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/configs/types/FeeExchange.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/configs/types/IFractionOrder.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/configs/types/PercentUpdate.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/enums/StrategyStatus.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/interfaces/IConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/models/strategy/interfaces/IStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/routes/routes.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/routes/strategy.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/services/service.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/garch/services/service.strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/helpers/express-firebase-custom-auth.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/helpers/populate.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/helpers/system-errors.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/app-server.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/generics/strategy/AbstractServiceStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/__mocks__/kafka-consumer-bot-events-queue.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/__mocks__/kafka-consumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/__mocks__/kafka-producer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-consumer-bot-events-queue.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-consumer-create-topics.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-consumer-crypto-data.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-consumer-cryptodata-groupall.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-consumer-generic-topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-consumer-status-queue.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-consumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-cryptodata-hardcode.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-producer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/kafka/kafka-status-consumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/middlewares/auth-route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/middlewares/firebase.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/middlewares/winston.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/infra/ws/ws-service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/Enums/area.en.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/controllers/order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/controllers/route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/db/__mocks__/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/middlewares/auth-route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/middlewares/cron.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/middlewares/kafka-consumer.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/Application.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/Exchange.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/Instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/Order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/Page.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/Profile.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/Strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/StrategyHistory.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/dtos/dto.dash.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/dtos/dto.indicator.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/dtos/dto.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/interfaces/ConfigExposition.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/interfaces/IKafkaStrategyMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/models/interfaces/IWsKafka.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/routes/exchange.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/routes/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/routes/instance.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/routes/order.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/routes/profile.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/routes/routes.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/routes/strategy.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/services/service.exchange.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/services/service.instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/services/service.order.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/market-maker/services/service.strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/db/__mocks__/db-.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/db/__mocks__/db-topic-persistent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/db/db-.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/db/db-topic-persistent.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/middlewares/__mocks__/winston.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/middlewares/cron.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/middlewares/generic-middlewares.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/middlewares/validate-header.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/middlewares/winston.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/models/ExceptionResponse.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/models/enum/CoolectionTradeWindow.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/models/enum/Topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/models/enum/projectName.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/models/interface/IConfigStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/models/interface/IKafkaMessage.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/models/interface/IWsKafka.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/services/service.coinapi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/util/factorPool.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/controllers/strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/db/__mocks__/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/helper/factorPool.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/AbstractStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/GarchStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/MarketMakerStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/TelegramStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/GarchConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/MarketMakerConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/TelegramConfig.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/ConfigCryptoMarketPrice.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/ConfigExchangeOptions.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/ConfigExposition.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/ConfigForexMarketPrice.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/ConfigGlobal.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/ConfigKafka.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/ConfigReferencePrice.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/ConfigStrategyOrder.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/FractionOrder.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/configs/types/PercentUpdate.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/models/strategy/interfaces/IStrategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/routes/strategy.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/strategy/services/service.strategy.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/controllers/topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/db/__mocks__/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/db/db.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/middlewares/express-firebase-custom-auth.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/middlewares/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/models/Topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/routes/topic.route.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/subscriber/services/service.topic.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger.json.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/app.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/arbitror-swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/bot-garch-swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/bot-telegram-swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/common-swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/garch-swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/garch-wagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/index.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/market-maker-swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/market-maker-wagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/models/application-response.swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/models/instance.swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/models/strategy.swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/routes/instance.route.swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/strategy-swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/subcriber-wagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/swagger/swagger.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/bot-garch/service/order.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/bot-telegram/service/group.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/commons/service/bot-events.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/commons/service/exchange.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/commons/service/group.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/commons/service/instance.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/commons/service/topic.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/garch/service/strategy.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/market-maker/service/exchange.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/market-maker/service/instance.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/market-maker/service/order.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/market-maker/service/strategy.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/service/exchange.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/service/instance.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/service/instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/service/order.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/service/strategy.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/service/validate.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/strategy/service/strategy-garch.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/strategy/service/strategy-market-maker.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test/subscriber/service/topic.spec.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/build-env.js">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/build-env.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/package.json">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/adm.routing.module.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/model/Profile.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/model/Profile.ts.css">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/profiles/profiles.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/profiles/profiles.component.scss">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/profiles/profiles.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/services/profile.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/services/route.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/services/user.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/users/users.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/users/users.component.scss">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/adm/users/users.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/app.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/login/login.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/control-panel/control-panel.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/control-panel/control-panel.component.scss">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/control-panel/control-panel.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/dashboard/dashboard.component.css">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/dashboard/dashboard.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/dashboard/dashboard.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/instance/instance.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/market-maker-routing.module.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/market-maker.component.html">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/market-maker.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/models/Instance.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/models/OrderBook.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/models/ResponseApi.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/robots-market/robots-market.component.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/services/exchange.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/services/instance.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/services/order.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/market-maker/services/strategy.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/services/auth.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/services/wsclient.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/app/shared/services/socket/socket.service.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/build-env.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/environments/environment.prod.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/environments/environment.ts">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../InvestmentMonitorFrontend/src/index.html">
          <value>
            <set />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>